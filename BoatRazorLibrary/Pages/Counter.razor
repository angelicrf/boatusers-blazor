@page "/boatautomation"
@inject IJSRuntime js
@implements IAsyncDisposable

<h1>Boat Automation</h1>
<LoginRoute />

@if (IsMobile)
{
    DeviceSensors instance = new DeviceSensors();
    <div class="m-auto">
        <div class="row mt-3">
            <button class="btn btn-info" @onclick="() => DeviceInfoClicked()">Device Info</button>
        </div>
        <div class="row mt-3">
            <button class="btn btn-danger" @onclick="() => instance.DriveToNewLocation()">Device Map</button>
        </div>
        <div class="row mt-3">
            <button class="btn btn-primary" @onclick="instance.GetCurrentLocation">Device Location</button>
        </div>
    </div>
    if (isDeviceInfo)
    {
        <div class="mb-2 fw-bold text-info"> App Name: <span class="text-danger"> @instance.name</span></div>
        <div class="mt-3 mb-2 fw-bold text-info"> App package: <span class="text-danger">Application Package: @instance.package</span></div>
        <div class="mb-2 fw-bold text-info"> App Version: <span class="text-danger">Application Version: @instance.version</span></div>
        <div class="mt-3 fw-bold text-info"> App Build: <span class="text-danger">Application Build: @instance.build</span></div>
    }

    <div class="mt-3 mb-2 fw-bold text-info"> My Location: <span class="text-danger">@instance.MyLon and @instance.MyLat</span></div>
    <div class="mt-3 mb-2 fw-bold text-info"> Permission: <span class="text-danger">@instance.Granted</span></div>
}
else
{
    <div class="m-auto">
      <button class="btn btn-primary" @onclick="CountCall">Count</button>
    </div>
    <div>@CountElement</div>       
}

@code
{

    private bool isDeviceInfo { get; set; } = false;

    private bool IsMobile { get; set; }

    private IJSObjectReference? funcModule;

    private int CountElement { get; set; } = 10;

    private void CountCall()
    {
        CountElement += 20;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            funcModule = await js.InvokeAsync<IJSObjectReference>(
            "import", "./_content/BoatRazorLibrary/cartInfo.js");

            IsMobile = await funcModule.InvokeAsync<bool>("isDevice");
            StateHasChanged();
        }
    }
    async ValueTask IAsyncDisposable.DisposeAsync()
    {

        if (funcModule is not null)
        {
            await funcModule.DisposeAsync();
        }
    }
    private bool DeviceInfoClicked() => isDeviceInfo = !isDeviceInfo;


    }
